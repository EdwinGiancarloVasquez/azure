del link:
https://docs.microsoft.com/en-us/azure/load-balancer/quickstart-load-balancer-standard-public-cli?tabs=option-1-create-load-balancer-basic


*****
*****'
%Create a resource group:

 az group create \
    --name myResourceGroupLB \
    --location eastus

****
%create virtual network

az network vnet create \
    --resource-group myResourceGroupLB \
    --location eastus \
    --name myVNet \
    --address-prefixes 10.1.0.0/16 \
    --subnet-name myBackendSubnet \
    --subnet-prefixes 10.1.0.0/24


***********

%network security group

az network nsg create \
    --resource-group myResourceGroupLB \
    --name myNSG

**********

%network security group rule

 az network nsg rule create \
    --resource-group myResourceGroupLB \
    --nsg-name myNSG \
    --name myNSGRuleHTTP \
    --protocol '*' \
    --direction inbound \
    --source-address-prefix '*' \
    --source-port-range '*' \
    --destination-address-prefix '*' \
    --destination-port-range 80 \
    --access allow \
    --priority 200

********

% Create network interfaces for the virtual machines

for NUM in 1 2 3
do
az network nic create \
    --resource-group myResourceGroupLB \
    --name myNicVM0$NUM \
    --vnet-name myVNet \
    --subnet myBackEndSubnet \
    --network-security-group myNSG

done

******
create a file cloud-ini.txt in he bash, using the command nano (linux)
#cloud-config
package_upgrade: true
packages:
  - nginx
  - nodejs
  - npm
write_files:
  - owner: www-data:www-data
  - path: /etc/nginx/sites-available/default
    content: |
      server {
        listen 80;
        location / {
          proxy_pass http://localhost:3000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }
      }
  - owner: azureuser:azureuser
  - path: /home/azureuser/myapp/index.js
    content: |
      var express = require('express')
      var app = express()
      var os = require('os');
      app.get('/', function (req, res) {
        res.send('Hello World from host ' + os.hostname() + '!')
      })
      app.listen(3000, function () {
        console.log('Hello world app listening on port 3000!')
      })
runcmd:
  - service nginx restart
  - cd "/home/azureuser/myapp"
  - npm init
  - npm install express -y
  - nodejs index.js


*********
%Create availability set for virtual machines

az vm availability-set create \
    --name myAvSet \
    --resource-group myResourceGroupLB \
    --location eastus

*********

%Create 3 virtual machines

for NUM in 1 2 3
do
az vm create \
    --resource-group myResourceGroupLB \
    --name myVM$NUM \
    --nics myNicVM$NUM \
    --image UbuntuLTS \
    --generate-ssh-keys \
    --custom-data cloud-init.txt \
    --availability-set myAvSet \
    --no-wait 
done
